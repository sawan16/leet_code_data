You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.


Example 1:
Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.

Example 2:

Input: l1 = [0], l2 = [0]
Output: [0]

Example 3:

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]

//C++ Code
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {

        ListNode* head = NULL, *itr = NULL;
        int tmp=0, carry=0;
        while(l1!=NULL || l2!=NULL){
            
            int i,j;
            if(l1==NULL){
                i = 0;
                j = l2->val;

            }
            if(l2==NULL){
                cout<<"-----";
                j = 0;
                i = l1->val;
           
            }
            if(l1!=NULL && l2!=NULL){
                i = l1->val;
                j = l2->val;
            }

            //cout<<i<< "  "<<j<<endl;
            tmp = i + j + carry;

            if(tmp>=10){
                carry = tmp/10;
                tmp = tmp%10;
                
            }
            else{
                carry = 0;
            }
            cout<<tmp<<" "<<carry<<endl;

           

            if(head == NULL){
                head = new ListNode(tmp);
                itr = head;
            }
            else{
                ListNode* l = new ListNode(tmp);
                itr->next = l;
                itr = l;
            }

            if(l1==NULL && l2!=NULL){
                 l2 = l2->next;
            }
            else if(l2==NULL && l1!=NULL){
                 l1 = l1->next;
           
            }
            else{
                 l1 = l1->next;
                 l2 = l2->next;
            }
        }

        if(carry>0){
            cout<<"last carry"<<carry;

            ListNode* l = new ListNode(carry);
            itr->next = l;
            itr = l;

        }

        return head;
        
    }
};